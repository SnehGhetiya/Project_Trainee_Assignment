@model PagedList.IPagedList<ProductManagement.Models.tbl_Product>
@using PagedList.Mvc;

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="@Url.Content("~/Scripts/jquery-3.5.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-3.5.1.js")" type="text/javascript"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" integrity="sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu" crossorigin="anonymous">

    <!-- Optional theme -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap-theme.min.css" integrity="sha384-6pzBo3FDv/PJ8r2KRkGHifhEocL+1X2rVCTTkUfGk7/0pbek5mMa1upzvWbrUbOZ" crossorigin="anonymous">

    <!-- Latest compiled and minified JavaScript -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js" integrity="sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd" crossorigin="anonymous"></script>
</head>

<script type="text/javascript">
    $(document).ready(function () {
        $('#checkBoxAll').click(function () {
            if ($(this).is(":checked"))
                $('.chCheckBoxId').prop('checked', true);
            else
                $('.chCheckBoxId').prop('checked', false);
        });
    });

    var strValue = "@((string)ViewBag.msg)";
    if (strValue != null && strValue !== '') {
        swal("", strValue, "success");
    }

</script>

@{
    ViewBag.Title = "List";
}

<nav class="navbar navbar-default">
    <div class="container-fluid">
        <div class="navbar-header">
            <h3 style="text-align:center; color: green;">List</h3>
        </div>
    </div>
</nav>

@using (Html.BeginForm("List", "Product", FormMethod.Get))
{
    <div class="form-inline" style="float:right; text-align:right;">
        @Html.TextBox("Search", ViewBag.CurrentFilter as string, new { @class = "form-control" })
        <button type="submit" style="width:70px; height:40px;" value="Search" class="btn btn-primary">Search</button>
    </div>
}
<br />


@using (Html.BeginForm("List", "Product", FormMethod.Post))
{
    <div class="btn-group-horizontal">
        <input type="button" class="btn btn-info" value="Add New" onclick="location.href='@Url.Action("Create", "Product")'" />
        <input type="submit" value="Delete All" class="btn btn-warning" onclick="return confirm('Are you sure?')" />
    </div>
    <br />
    <br />
    <table class="table">
        <thead>
            <tr>
                <th>
                    <input type="checkbox" id="checkBoxAll" class="custom-checkbox" />
                </th>
                <th>
                    @Html.Label("Name")
                    @Html.ActionLink(" ", "List", new { sortType = ViewBag.SortingName, currentFilter = ViewBag.CurrentFilter }, new { @class = "fa fa-fw fa-sort" })
                </th>
                <th>
                    @Html.Label("Category")
                    @Html.ActionLink(" ", "List", new { sortType = ViewBag.SortingCategory, currentFilter = ViewBag.CurrentFilter }, new { @class = "fa fa-fw fa-sort" })
                </th>
                <th>
                    @Html.Label("Price")
                    @Html.ActionLink(" ", "List", new { sortType = ViewBag.SortingPrice, currentFilter = ViewBag.CurrentFilter }, new { @class = "fa fa-fw fa-sort" })
                </th>
                <th>
                    @Html.Label("Short Description")
                </th>
                <th>
                    @Html.Label("Small Image")
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <th scope="row">
                        <input type="checkbox" name="ids" class="chCheckBoxId" id="ids" value="@item.Id" />
                    </th>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Short_Description)
                    </td>
                    <td>
                        <img src="@Url.Content(item.Small_ImagePath)" height="100" width="100" alt="Image Not Found" />
                    </td>
                    <td>
                        <div class="btn-group-horizontal">
                            <button type="button" style="width:80px; height:50px;" class="btn btn-warning" onclick="location.href='@Url.Action("Edit", "Product", new { id = item.Id })'">Edit</button>
                            <button type="button" style="width:80px; height:50px;" class="btn btn-danger" onclick="location.href='@Url.Action("Delete", "Product", new { id = item.Id })'">Delete</button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div id="container" style="margin-left: 20px">
    <p></p>
    <p></p>
    <div class="pagination" style="margin-left: 400px">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("List",
       new { page, sortType = ViewBag.CurrentSort, CurrentFilter = ViewBag.CurrentFilter }))
    </div>
</div>
